name: Publish Dex Container

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - '.github/workflows/publish-dex-container.yaml'
      - 'dex-config.yaml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: neon-law-foundation/luxe-dex

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Dex configuration
        run: |
          cat > dex-config.yaml <<'EOF'
          issuer: http://127.0.0.1:8080/dex
          storage:
            type: sqlite3
            config:
              file: /var/lib/dex/dex.db
          web:
            http: 0.0.0.0:8080
          connectors:
          - type: oidc
            id: github-actions
            name: github-actions
            config:
              issuer: https://token.actions.githubusercontent.com
              scopes: [ "openid", "groups" ]
              userNameKey: sub
          staticClients:
            - name: My app
              id: my-app
              secret: my-secret
              public: true
          EOF

      - name: Create Dockerfile
        run: |
          cat > Dockerfile <<'DOCKERFILE'
          FROM ghcr.io/dexidp/dex:latest

          # Copy configuration first
          COPY dex-config.yaml /etc/dex/config.docker.yaml

          # Create a volume mount point for the database
          VOLUME /var/lib/dex

          # Set working directory to where database will be stored
          WORKDIR /var/lib/dex

          EXPOSE 8080
          CMD ["dex", "serve", "/etc/dex/config.docker.yaml"]
          DOCKERFILE

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Always publish to 'latest' tag for main branch, plus branch-specific tags
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
