---
name: Continuous Integration

on:
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on:
      - ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: luxe
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      dex:
        image: ghcr.io/neon-law-foundation/luxe-dex:latest
        ports:
          - 2222:8080
        options: >-
          --health-cmd "nc -z localhost 8080 || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: "actions/checkout@v4"

      - name: Configure system for enhanced 16GB ubuntu-latest runner
        run: |
          # GitHub upgraded ubuntu-latest runners: 4 vCPUs, 16 GiB memory
          # Configure system to leverage the enhanced capacity
          sudo swapon --show
          free -h
          echo "ðŸš€ Enhanced GitHub runner: 4 vCPUs, 16 GiB memory"
          
          # Set kernel memory management optimized for 16GB
          echo 'vm.overcommit_memory=1' | sudo tee -a /etc/sysctl.conf
          echo 'vm.max_map_count=262144' | sudo tee -a /etc/sysctl.conf  # Increased for 16GB
          echo 'vm.swappiness=10' | sudo tee -a /etc/sysctl.conf
          echo 'vm.vfs_cache_pressure=50' | sudo tee -a /etc/sysctl.conf
          sudo sysctl -p
          
          # Set more generous process limits for 16GB system
          ulimit -d 8388608   # 8GB data segment limit
          ulimit -m 8388608   # 8GB physical memory limit
          ulimit -v 12582912  # 12GB virtual memory limit

      - uses: "actions/setup-python@v5"
        with:
          python-version: "3.11"

      - uses: actions/setup-node@v4
        with:
          node-version: "latest"

      - name: Install markdownlint-cli2
        run: npm install -g markdownlint-cli2

      - name: Install SQLFluff
        run: pip install sqlfluff

      - name: Lint migrations
        run: sqlfluff lint --dialect postgres .

      - name: Lint markdown
        run: ./scripts/validate-markdown.sh

      - name: Install Swift toolchain
        uses: vapor/swiftly-action@v0.2
        with:
          toolchain: latest

      - name: Run Swift Format Lint
        run: |
          swift format lint --strict --recursive --parallel --no-color-diagnostics .

      - name: Cache Swift Package Manager dependencies
        uses: actions/cache@v4
        with:
          path: |
            .build
            ~/.cache/org.swift.swiftpm
          key: spm-${{ runner.os }}-${{ hashFiles('Package.swift', 'Package.resolved') }}
          restore-keys: |
            spm-${{ runner.os }}-

      - name: Run Swift Build
        run: |
          # Leverage enhanced 4-vCPU, 16GB ubuntu-latest runner
          # Set generous process limits for enhanced runner
          ulimit -d 8388608   # 8GB data segment limit
          ulimit -m 8388608   # 8GB physical memory limit
          ulimit -v 12582912  # 12GB virtual memory limit
          # Use more parallelism with enhanced runner
          swift build --jobs 2

      - name: Run Database Migrations
        run: |
          swift run Palette migrate
        env:
          DATABASE_URL: postgres://postgres@localhost:5432/luxe?sslmode=disable
          REDIS_URL: redis://localhost:6379

      - name: Run tests
        run: |
          # Leverage enhanced 16GB ubuntu-latest runner for test execution
          # Set generous memory limits for enhanced runner
          ulimit -d 8388608   # 8GB data segment limit
          ulimit -m 8388608   # 8GB physical memory limit
          ulimit -v 12582912  # 12GB virtual memory limit
          export MALLOC_ARENA_MAX=2  # Allow more malloc arenas with 16GB
          export MALLOC_MMAP_THRESHOLD_=32768  # Use mmap for larger allocations
          export MALLOC_TRIM_THRESHOLD_=131072  # Trim heap more aggressively
          
          # With 16GB memory, we can run tests more efficiently
          ./scripts/run-memory-efficient-tests.sh
        env:
          DATABASE_URL: postgres://postgres@localhost:5432/luxe?sslmode=disable
          DEX_ISSUER: http://localhost:2222/dex
          DEX_CLIENT_ID: luxe-client
          DEX_JWKS_URL: http://localhost:2222/dex/keys
          DEX_BASE_URL: http://localhost:2222
          DEX_CALLBACK_URL: http://localhost:8080/auth/dex/callback
          ENV: TEST
          DISABLE_LEAK_DETECTION: true
          REDIS_URL: redis://localhost:6379
          # Swift runtime optimizations for enhanced 16GB runner
          SWIFT_DETERMINISTIC_HASHING: 1
          MALLOC_CONF: "narenas:2,dirty_decay_ms:1000,muzzy_decay_ms:1000,abort_conf:true"
          # Enhanced memory management for 16GB runner
          SWIFT_MAX_MEMORY_MB: 8192  # Allow Swift runtime to use up to 8GB
          SWIFT_BACKTRACE_LIMIT: 0   # Keep disabled to save memory

      - name: Enable auto-merge for PR
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ github.event.pull_request.number }}
          merge-method: squash

      - name: Set squash commit message
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            const title = pullRequest.title;
            const body = pullRequest.body || '';

            // Update PR to set the squash commit message
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              title: title,
              body: `${body}\n\n---\n\nSquash commit message will be:\n**${title}**\n\n${body}`
            });
