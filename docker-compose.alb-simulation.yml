version: '3.8'

services:
  # Nginx proxy to simulate AWS ALB header injection
  alb-simulator:
    image: nginx:alpine
    container_name: luxe-alb-simulator
    ports:
      - "8081:80"  # ALB simulation on port 8081
    volumes:
      - ./docker/alb-simulator/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/alb-simulator/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - luxe-server
    networks:
      - luxe-network
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/conf.d
    restart: unless-stopped

  # Your Luxe application server
  luxe-server:
    image: swift:5.9-focal
    container_name: luxe-server
    working_dir: /app
    ports:
      - "8080:8080"  # Direct access to server (bypassing ALB simulation)
    volumes:
      - .:/app
      - swift-build-cache:/app/.build
    command: >
      bash -c "
        apt-get update && 
        apt-get install -y libpq-dev &&
        swift build &&
        swift run BazaarServer
      "
    environment:
      - ENV=development
      - LOG_LEVEL=debug
      - DATABASE_URL=postgres://postgres:luxe@postgres:5432/luxe
    depends_on:
      - postgres
    networks:
      - luxe-network
    restart: unless-stopped

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: luxe-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=luxe
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=luxe
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    networks:
      - luxe-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d luxe"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  luxe-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  swift-build-cache:
    driver: local